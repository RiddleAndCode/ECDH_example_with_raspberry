from Crypto.Cipher import AES
from Crypto.Util import Counter
from Crypto.Hash import SHA256
import ecdsa,hashlib


key = bytearray([76, 153, 132, 107, 198, 212,21,118,10,195,255,53,179,101,122,217])
cipher = bytearray([0x3A, 0x9C, 0x9A, 0x26, 0xCD, 0x93, 0x7D, 0x9A, 0x34, 0x1A, 0x25, 0x6C, 0x02, 0x75, 0x6F, 0xDB, 0x2D, 0xBF, 0x32, 0x9C, 0xCA, 0x6B, 0x6E, 0x66, 0x85, 0x01, 0x3C, 0x96, 0xEE, 0xF8, 0x28, 0xD2, 0x34, 0xC2, 0x89, 0x2D, 0x80, 0xF8, 0x5B, 0x5E, 0x74, 0x2A, 0xCD, 0x10, 0x49, 0x56, 0xDB, 0x4E, 0xBB, 0x28, 0xD9, 0x77, 0xCD, 0x11, 0xA8, 0xB3, 0x60, 0x04, 0xBD, 0x57, 0x2E, 0x6F, 0xD8, 0xF1, 0xB0, 0x09, 0x4C, 0x64, 0xB6, 0x58, 0x5B, 0x12, 0xFD, 0xE6, 0xF0, 0x0E, 0x26, 0x10, 0x4E, 0x90, 0x3E, 0xDB, 0xBE, 0xC7, 0xF5, 0xFF, 0x89, 0x79, 0xCB, 0x77, 0x68, 0x6D, 0xCF, 0x93, 0x0B, 0xFD, 0x7C, 0x60, 0x61, 0x44, 0x68, 0xB8, 0x1B, 0x70, 0x01, 0x60, 0x46, 0x94, 0xCB])
public_key = ('9092ce4ce47ccf64a45ecc695b2d645f5e74a958b16b7abc9d6f958848899487f6ca81418ae6e9e0629e61bd651147d9d2f9949d80071297c2c39416d3aa2b41')

counter = Counter.new(128, prefix = b'', suffix = b'', little_endian=False, initial_value=0)
ctx = AES.new(key, AES.MODE_CTR, counter=counter)
decrypted_list = (ctx.decrypt(cipher))
print("\n\t\t\tDecrypted Message\n")
print(list(decrypted_list))
print("\n\t\t\tSignature\n")
signature = decrypted_list[-64:]
print(list(signature))
payload = decrypted_list[:-66]
print("\n\t\t\tPayload\n")
print(list(payload))
print("\n\t\t\tSha-256 Digest\n")
hash_object = SHA256.new(data=bytearray(payload))
digest = (hash_object.digest())
print(list(digest))

vk = ecdsa.VerifyingKey.from_string(bytes.fromhex(public_key), curve=ecdsa.NIST256p)
res = vk.verify(bytes(signature), bytes(payload), hashfunc=hashlib.sha256) # True
print(res)