from Crypto.Cipher import AES
from Crypto.Util import Counter
from Crypto.Hash import SHA256
import ecdsa,hashlib


key = bytes([76, 153, 132, 107, 198, 212,21,118,10,195,255,53,179,101,122,217])
cipher = bytes([0x3A, 0xFD, 0xBF, 0xC0, 0x49, 0xAA, 0x22, 0xBD, 0x87, 0x70, 0x69, 0x92, 0xDE, 0x8E, 0x60, 0x27, 0x94, 0xB9, 0x64, 0x40, 0x01, 0xDF, 0xA4, 0xF1, 0x78, 0x51, 0x0B, 0x4C, 0x60, 0xE3, 0xA5, 0xAE, 0x19, 0x23, 0xD8, 0x8E, 0x00, 0xD9, 0xB5, 0xD6, 0x22, 0x85, 0x83, 0xDD, 0xC8, 0x27, 0x2A, 0x95, 0x6D, 0x89, 0xF9, 0x6C, 0x6D, 0x39, 0x15, 0xA3, 0xEC, 0x12, 0xD3, 0x64, 0x85, 0x09, 0xED, 0x5C, 0x10, 0xA1, 0xFA, 0xD4, 0xE7, 0x11, 0x16, 0xE5, 0x23, 0xC7, 0xAD, 0x99, 0xF7, 0x7A, 0xC6, 0x40, 0x62, 0x64, 0x94])
public_key = ('9092ce4ce47ccf64a45ecc695b2d645f5e74a958b16b7abc9d6f958848899487f6ca81418ae6e9e0629e61bd651147d9d2f9949d80071297c2c39416d3aa2b41')

counter = Counter.new(128, prefix = b'', suffix = b'', little_endian=False, initial_value=0)
ctx = AES.new(key, AES.MODE_CTR, counter=counter)
decrypted_list = (ctx.decrypt(cipher))
print("\n\t\t\tDecrypted Message\n")
print(list(decrypted_list))
print("\n\t\t\tSignature\n")
signature = decrypted_list[-64:]
print(list(signature))
payload = decrypted_list[:-66]
print("\n\t\t\tPayload\n")
print(list(payload))
print("\n\t\t\tSha-256 Digest\n")
hash_object = SHA256.new(data=bytearray(payload))
digest = (hash_object.digest())
print(list(digest))

vk = ecdsa.VerifyingKey.from_string(bytes.fromhex(public_key), curve=ecdsa.NIST256p)
res = vk.verify(bytes(signature), bytes(payload), hashfunc=hashlib.sha256) # True
print(res)